(function() {
  Elegance.Router = (function() {
    function Router(app) {
      var self;
      this.app = app;
      this.routes = [];
      this.current = null;
      if (!(this.app instanceof Elegance.App)) {
        throw new Error('app must be an instance of Elegance.App!');
      }
      self = this;
      $('a').on('click', function(e) {
        var attr;
        attr = $(this).attr('href');
        if (!/^https?/.test(attr)) {
          e.preventDefault();
          self.navigate(attr);
          return false;
        }
      });
    }

    Router.prototype.setRootURL = function(rootURL) {
      this.rootURL = rootURL;
      return this.rootURL.replace(/^https?:\/\//, '');
    };

    Router.prototype.navigate = function(path, pushState) {
      var i, len, ref, route;
      if (pushState == null) {
        pushState = true;
      }
      path = path.replace(/^\/{2,}/, '').replace(/\/{2,}$/, '');
      if (path === '') {
        path = '/';
      }
      console.log("navigation to:'" + path + "'");
      ref = this.routes;
      for (i = 0, len = ref.length; i < len; i++) {
        route = ref[i];
        if (route.matches(path)) {
          if (route.target instanceof Elegance.Controller) {
            if (this.current !== null) {
              if (this.current === route) {
                return false;
              }
              if (this.current.target instanceof Elegance.Controller) {
                this.current.target.hide();
              }
            }
            if (!route.target.initialized) {
              route.target.init();
            }
            route.target.show.apply(route.target, route.extractParameters(path));
            if (pushState) {
              window.history.pushState(path, path, this.rootURL + path);
            }
            return this.current = route;
          }
        }
      }
      return console.log("404 Not Found (" + path + ")");
    };

    Router.prototype.map = function(callback) {
      var i, len, ref, route, target;
      callback.apply(this);
      console.log('__________routes___________');
      ref = this.routes;
      for (i = 0, len = ref.length; i < len; i++) {
        route = ref[i];
        if (route.target instanceof Elegance.Controller) {
          target = route.target.constructor.name;
        } else {
          target = null;
        }
        console.log("'" + route.path + "' -> " + route.name + " (target: " + target + ")");
      }
      return console.log('---------------------------');
    };

    Router.prototype.resource = function(name, path, target) {
      if (target == null) {
        target = null;
      }
      return this.routes.push(new Elegance.Router.Route(this.app, name, path, target));
    };

    Router.prototype.init = function() {
      var path;
      path = window.location.href.replace(this.rootURL, '');
      this.navigate(path, false);
      return $(window).bind('popstate', (function(_this) {
        return function(e) {
          path = e.originalEvent.state;
          return _this.navigate(path, false);
        };
      })(this));
    };

    return Router;

  })();

  Elegance.registerModule('router', Elegance.Router);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdXRlci9yb3V0ZXIuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsRUFBTSxRQUFRLENBQUM7QUFDRCxJQUFBLGdCQUFDLEdBQUQsR0FBQTtBQUNaLFVBQUEsSUFBQTtBQUFBLE1BRGEsSUFBQyxDQUFBLE1BQUQsR0FDYixDQUFBO0FBQUEsTUFBQSxJQUFDLENBQUEsTUFBRCxHQUFVLEVBQVYsQ0FBQTtBQUFBLE1BQ0EsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQURYLENBQUE7QUFHQSxNQUFBLElBQUEsQ0FBQSxDQUFPLElBQUMsQ0FBQSxHQUFELFlBQWdCLFFBQVEsQ0FBQyxHQUFoQyxDQUFBO0FBQ0MsY0FBVSxJQUFBLEtBQUEsQ0FBTSwwQ0FBTixDQUFWLENBREQ7T0FIQTtBQUFBLE1BT0EsSUFBQSxHQUFPLElBUFAsQ0FBQTtBQUFBLE1BUUEsQ0FBQSxDQUFFLEdBQUYsQ0FBTSxDQUFDLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFNBQUMsQ0FBRCxHQUFBO0FBQ2xCLFlBQUEsSUFBQTtBQUFBLFFBQUEsSUFBQSxHQUFPLENBQUEsQ0FBRSxJQUFGLENBQU8sQ0FBQyxJQUFSLENBQWEsTUFBYixDQUFQLENBQUE7QUFDQSxRQUFBLElBQUEsQ0FBQSxTQUFnQixDQUFDLElBQVYsQ0FBZSxJQUFmLENBQVA7QUFDQyxVQUFBLENBQUMsQ0FBQyxjQUFGLENBQUEsQ0FBQSxDQUFBO0FBQUEsVUFDQSxJQUFJLENBQUMsUUFBTCxDQUFjLElBQWQsQ0FEQSxDQUFBO0FBRUEsaUJBQU8sS0FBUCxDQUhEO1NBRmtCO01BQUEsQ0FBbkIsQ0FSQSxDQURZO0lBQUEsQ0FBYjs7QUFBQSxxQkFnQkEsVUFBQSxHQUFZLFNBQUMsT0FBRCxHQUFBO0FBQ1gsTUFEWSxJQUFDLENBQUEsVUFBRCxPQUNaLENBQUE7YUFBQSxJQUFDLENBQUEsT0FBTyxDQUFDLE9BQVQsQ0FBaUIsY0FBakIsRUFBaUMsRUFBakMsRUFEVztJQUFBLENBaEJaLENBQUE7O0FBQUEscUJBbUJBLFFBQUEsR0FBVSxTQUFDLElBQUQsRUFBTyxTQUFQLEdBQUE7QUFFVCxVQUFBLGtCQUFBOztRQUZnQixZQUFZO09BRTVCO0FBQUEsTUFBQSxJQUFBLEdBQU8sSUFBSSxDQUFDLE9BQUwsQ0FBYSxTQUFiLEVBQXdCLEVBQXhCLENBQTJCLENBQUMsT0FBNUIsQ0FBb0MsU0FBcEMsRUFBK0MsRUFBL0MsQ0FBUCxDQUFBO0FBQ0EsTUFBQSxJQUFjLElBQUEsS0FBUSxFQUF0QjtBQUFBLFFBQUEsSUFBQSxHQUFPLEdBQVAsQ0FBQTtPQURBO0FBQUEsTUFHQSxPQUFPLENBQUMsR0FBUixDQUFZLGlCQUFBLEdBQWtCLElBQWxCLEdBQXVCLEdBQW5DLENBSEEsQ0FBQTtBQUtBO0FBQUEsV0FBQSxxQ0FBQTt1QkFBQTtBQUNDLFFBQUEsSUFBRyxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsQ0FBSDtBQUNDLFVBQUEsSUFBRyxLQUFLLENBQUMsTUFBTixZQUF3QixRQUFRLENBQUMsVUFBcEM7QUFFQyxZQUFBLElBQUcsSUFBQyxDQUFBLE9BQUQsS0FBYyxJQUFqQjtBQUNDLGNBQUEsSUFBRyxJQUFDLENBQUEsT0FBRCxLQUFZLEtBQWY7QUFDQyx1QkFBTyxLQUFQLENBREQ7ZUFBQTtBQUdBLGNBQUEsSUFBRyxJQUFDLENBQUEsT0FBTyxDQUFDLE1BQVQsWUFBMkIsUUFBUSxDQUFDLFVBQXZDO0FBQ0MsZ0JBQUEsSUFBQyxDQUFBLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBaEIsQ0FBQSxDQUFBLENBREQ7ZUFKRDthQUFBO0FBUUEsWUFBQSxJQUFBLENBQUEsS0FBZ0MsQ0FBQyxNQUFNLENBQUMsV0FBeEM7QUFBQSxjQUFBLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBYixDQUFBLENBQUEsQ0FBQTthQVJBO0FBQUEsWUFTQSxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFsQixDQUF3QixLQUFLLENBQUMsTUFBOUIsRUFBc0MsS0FBSyxDQUFDLGlCQUFOLENBQXdCLElBQXhCLENBQXRDLENBVEEsQ0FBQTtBQVlBLFlBQUEsSUFBRyxTQUFIO0FBQ0MsY0FBQSxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQWYsQ0FBeUIsSUFBekIsRUFBK0IsSUFBL0IsRUFBcUMsSUFBQyxDQUFBLE9BQUQsR0FBVyxJQUFoRCxDQUFBLENBREQ7YUFaQTtBQWVBLG1CQUFPLElBQUMsQ0FBQSxPQUFELEdBQVcsS0FBbEIsQ0FqQkQ7V0FERDtTQUREO0FBQUEsT0FMQTthQTBCQSxPQUFPLENBQUMsR0FBUixDQUFZLGlCQUFBLEdBQWtCLElBQWxCLEdBQXVCLEdBQW5DLEVBNUJTO0lBQUEsQ0FuQlYsQ0FBQTs7QUFBQSxxQkFrREEsR0FBQSxHQUFLLFNBQUMsUUFBRCxHQUFBO0FBQ0osVUFBQSwwQkFBQTtBQUFBLE1BQUEsUUFBUSxDQUFDLEtBQVQsQ0FBZSxJQUFmLENBQUEsQ0FBQTtBQUFBLE1BQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSw2QkFBWixDQURBLENBQUE7QUFFQTtBQUFBLFdBQUEscUNBQUE7dUJBQUE7QUFDQyxRQUFBLElBQUcsS0FBSyxDQUFDLE1BQU4sWUFBd0IsUUFBUSxDQUFDLFVBQXBDO0FBQ0MsVUFBQSxNQUFBLEdBQVMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBbEMsQ0FERDtTQUFBLE1BQUE7QUFFSyxVQUFBLE1BQUEsR0FBUyxJQUFULENBRkw7U0FBQTtBQUFBLFFBR0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxHQUFBLEdBQUksS0FBSyxDQUFDLElBQVYsR0FBZSxPQUFmLEdBQXNCLEtBQUssQ0FBQyxJQUE1QixHQUFpQyxZQUFqQyxHQUE2QyxNQUE3QyxHQUFvRCxHQUFoRSxDQUhBLENBREQ7QUFBQSxPQUZBO2FBT0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSw2QkFBWixFQVJJO0lBQUEsQ0FsREwsQ0FBQTs7QUFBQSxxQkE0REEsUUFBQSxHQUFVLFNBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxNQUFiLEdBQUE7O1FBQWEsU0FBUztPQUMvQjthQUFBLElBQUMsQ0FBQSxNQUFNLENBQUMsSUFBUixDQUFpQixJQUFBLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBaEIsQ0FBc0IsSUFBQyxDQUFBLEdBQXZCLEVBQTRCLElBQTVCLEVBQWtDLElBQWxDLEVBQXdDLE1BQXhDLENBQWpCLEVBRFM7SUFBQSxDQTVEVixDQUFBOztBQUFBLHFCQStEQSxJQUFBLEdBQU0sU0FBQSxHQUFBO0FBQ0wsVUFBQSxJQUFBO0FBQUEsTUFBQSxJQUFBLEdBQU8sTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBckIsQ0FBNkIsSUFBQyxDQUFBLE9BQTlCLEVBQXVDLEVBQXZDLENBQVAsQ0FBQTtBQUFBLE1BQ0EsSUFBQyxDQUFBLFFBQUQsQ0FBVSxJQUFWLEVBQWdCLEtBQWhCLENBREEsQ0FBQTthQUdBLENBQUEsQ0FBRSxNQUFGLENBQVMsQ0FBQyxJQUFWLENBQWUsVUFBZixFQUEyQixDQUFBLFNBQUEsS0FBQSxHQUFBO2VBQUEsU0FBQyxDQUFELEdBQUE7QUFDMUIsVUFBQSxJQUFBLEdBQU8sQ0FBQyxDQUFDLGFBQWEsQ0FBQyxLQUF2QixDQUFBO2lCQUNBLEtBQUMsQ0FBQSxRQUFELENBQVUsSUFBVixFQUFnQixLQUFoQixFQUYwQjtRQUFBLEVBQUE7TUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBQTNCLEVBSks7SUFBQSxDQS9ETixDQUFBOztrQkFBQTs7TUFERCxDQUFBOztBQUFBLEVBMEVBLFFBQVEsQ0FBQyxjQUFULENBQXdCLFFBQXhCLEVBQWtDLFFBQVEsQ0FBQyxNQUEzQyxDQTFFQSxDQUFBO0FBQUEiLCJmaWxlIjoiUm91dGVyL3JvdXRlci5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEVsZWdhbmNlLlJvdXRlclxyXG5cdGNvbnN0cnVjdG9yOiAoQGFwcCkgLT5cclxuXHRcdEByb3V0ZXMgPSBbXVxyXG5cdFx0QGN1cnJlbnQgPSBudWxsXHJcblxyXG5cdFx0dW5sZXNzIEBhcHAgaW5zdGFuY2VvZiBFbGVnYW5jZS5BcHBcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yICdhcHAgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBFbGVnYW5jZS5BcHAhJ1xyXG5cclxuXHRcdCMgbGlzdGVuIGZvciBjbGljayBldmVudHMgb24gbGlua3NcclxuXHRcdHNlbGYgPSBAXHJcblx0XHQkKCdhJykub24gJ2NsaWNrJywgKGUpIC0+XHJcblx0XHRcdGF0dHIgPSAkKHRoaXMpLmF0dHIgJ2hyZWYnXHJcblx0XHRcdHVubGVzcyAvXmh0dHBzPy8udGVzdCBhdHRyXHJcblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpXHJcblx0XHRcdFx0c2VsZi5uYXZpZ2F0ZSBhdHRyXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlXHJcblxyXG5cdHNldFJvb3RVUkw6IChAcm9vdFVSTCkgLT5cclxuXHRcdEByb290VVJMLnJlcGxhY2UgL15odHRwcz86XFwvXFwvLywgJydcclxuXHJcblx0bmF2aWdhdGU6IChwYXRoLCBwdXNoU3RhdGUgPSB0cnVlKSAtPlxyXG5cdFx0IyBzYW5pdGl6ZVxyXG5cdFx0cGF0aCA9IHBhdGgucmVwbGFjZSgvXlxcL3syLH0vLCAnJykucmVwbGFjZSgvXFwvezIsfSQvLCAnJylcclxuXHRcdHBhdGggPSAnLycgaWYgcGF0aCBpcyAnJ1xyXG5cclxuXHRcdGNvbnNvbGUubG9nIFwibmF2aWdhdGlvbiB0bzonI3twYXRofSdcIlxyXG5cclxuXHRcdGZvciByb3V0ZSBpbiBAcm91dGVzXHJcblx0XHRcdGlmIHJvdXRlLm1hdGNoZXMgcGF0aFxyXG5cdFx0XHRcdGlmIHJvdXRlLnRhcmdldCBpbnN0YW5jZW9mIEVsZWdhbmNlLkNvbnRyb2xsZXJcclxuXHRcdFx0XHRcdCMgZG8gd2UgaGF2ZSBhIGN1cnJlbnQgcm91dGU/XHJcblx0XHRcdFx0XHRpZiBAY3VycmVudCBpc250IG51bGxcclxuXHRcdFx0XHRcdFx0aWYgQGN1cnJlbnQgPT0gcm91dGVcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHJcblx0XHRcdFx0XHRcdGlmIEBjdXJyZW50LnRhcmdldCBpbnN0YW5jZW9mIEVsZWdhbmNlLkNvbnRyb2xsZXJcclxuXHRcdFx0XHRcdFx0XHRAY3VycmVudC50YXJnZXQuaGlkZSgpXHJcblxyXG5cdFx0XHRcdFx0IyBzaG93IGl0XHJcblx0XHRcdFx0XHRyb3V0ZS50YXJnZXQuaW5pdCgpIHVubGVzcyByb3V0ZS50YXJnZXQuaW5pdGlhbGl6ZWRcclxuXHRcdFx0XHRcdHJvdXRlLnRhcmdldC5zaG93LmFwcGx5KHJvdXRlLnRhcmdldCwgcm91dGUuZXh0cmFjdFBhcmFtZXRlcnMocGF0aCkpXHJcblxyXG5cdFx0XHRcdFx0IyBwdXNoIHN0YXRlXHJcblx0XHRcdFx0XHRpZiBwdXNoU3RhdGVcclxuXHRcdFx0XHRcdFx0d2luZG93Lmhpc3RvcnkucHVzaFN0YXRlIHBhdGgsIHBhdGgsIEByb290VVJMICsgcGF0aFxyXG5cclxuXHRcdFx0XHRcdHJldHVybiBAY3VycmVudCA9IHJvdXRlXHJcblxyXG5cdFx0Y29uc29sZS5sb2cgXCI0MDQgTm90IEZvdW5kICgje3BhdGh9KVwiXHJcblxyXG5cclxuXHRtYXA6IChjYWxsYmFjaykgLT5cclxuXHRcdGNhbGxiYWNrLmFwcGx5KHRoaXMpXHJcblx0XHRjb25zb2xlLmxvZyAnX19fX19fX19fX3JvdXRlc19fX19fX19fX19fJ1xyXG5cdFx0Zm9yIHJvdXRlIGluIEByb3V0ZXNcclxuXHRcdFx0aWYgcm91dGUudGFyZ2V0IGluc3RhbmNlb2YgRWxlZ2FuY2UuQ29udHJvbGxlclxyXG5cdFx0XHRcdHRhcmdldCA9IHJvdXRlLnRhcmdldC5jb25zdHJ1Y3Rvci5uYW1lXHJcblx0XHRcdGVsc2UgdGFyZ2V0ID0gbnVsbFxyXG5cdFx0XHRjb25zb2xlLmxvZyBcIicje3JvdXRlLnBhdGh9JyAtPiAje3JvdXRlLm5hbWV9ICh0YXJnZXQ6ICN7dGFyZ2V0fSlcIlxyXG5cdFx0Y29uc29sZS5sb2cgJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSdcclxuXHJcblx0cmVzb3VyY2U6IChuYW1lLCBwYXRoLCB0YXJnZXQgPSBudWxsKSAtPlxyXG5cdFx0QHJvdXRlcy5wdXNoIG5ldyBFbGVnYW5jZS5Sb3V0ZXIuUm91dGUoQGFwcCwgbmFtZSwgcGF0aCwgdGFyZ2V0KVxyXG5cclxuXHRpbml0OiAoKSAtPlxyXG5cdFx0cGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnJlcGxhY2UgQHJvb3RVUkwsICcnXHJcblx0XHRAbmF2aWdhdGUgcGF0aCwgZmFsc2VcclxuXHJcblx0XHQkKHdpbmRvdykuYmluZCAncG9wc3RhdGUnLCAoZSkgPT5cclxuXHRcdFx0cGF0aCA9IGUub3JpZ2luYWxFdmVudC5zdGF0ZVxyXG5cdFx0XHRAbmF2aWdhdGUgcGF0aCwgZmFsc2VcclxuXHJcblxyXG4jIHJlZ2lzdGVyIGFzIGEgbW9kdWxlXHJcbkVsZWdhbmNlLnJlZ2lzdGVyTW9kdWxlICdyb3V0ZXInLCBFbGVnYW5jZS5Sb3V0ZXIiXX0=